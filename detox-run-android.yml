trigger:
  - none

variables:
  GRADLE_USER_HOME: $(Build.SourcesDirectory)/android/.gradle

pool:
  vmImage: 'macos-latest'

stages:
  - stage: E2E
    jobs:
      - job: Run_E2E_Tests
        steps:
          - script: |
              yarn install --frozen-lockfile
            displayName: 'yarn install'

          - script: |
              chmod +x ./android/gradlew
              yarn build:android-detox
            displayName: 'Build app for tests'

          - script: |
              ls -laR android/app/build/outputs/apk
            displayName: '123'

          - task: AndroidSigning@3
            inputs:
              apkFiles: 'android/app/build/outputs/apk/release/app-release-unsigned.apk'
              apksign: true # Optional
              apksignerKeystoreFile: 'detox.keystore' # Required when apksign == True
              apksignerKeystorePassword: 'wlWoWigjHau0'
              apksignerKeystoreAlias: 'mcctemplateapp_dev'
              apksignerKeyPassword: 'wlWoWigjHau0'


          - task: AndroidSigning@3
            inputs:
              apkFiles: 'android/app/build/outputs/apk/androidTest/release/app-release-androidTest.apk'
              apksign: true # Optional
              apksignerKeystoreFile: 'detox.keystore' # Required when apksign == True
              apksignerKeystorePassword: 'wlWoWigjHau0'
              apksignerKeystoreAlias: 'mcctemplateapp_dev'
              apksignerKeyPassword: 'wlWoWigjHau0'

          - script: |
              ls -laR android/app/build/outputs/apk
              echo "1-------"
              cp android/app/build/outputs/apk/release/app-release-unsigned.apk android/app/build/outputs/apk/release/app-release.apk
              ls -laR android/app/build/outputs/apk
              echo "2-------"
            displayName: 'after signing'

          - script: |
              echo "Download emulator"
              echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install emulator --channel=0 > /dev/null
              echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-29;default;x86"
              echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name Pixel_API_28 --abi 'default/x86' --package 'system-images;android-29;default;x86'
              $ANDROID_HOME/emulator/emulator -list-avds
            displayName: 'Download emulator'

          - script: |
              printf 'hw.cpu.ncore=2' >> /Users/runner/.android/avd/Pixel_API_28.avd/config.ini
              nohup $ANDROID_HOME/emulator/emulator -avd Pixel_API_28 -no-audio -no-snapshot -no-window -gpu swiftshader_indirect -no-boot-anim &
              $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
              $ANDROID_HOME/platform-tools/adb devices
            displayName: 'Start emulator'

          - script: yarn test:android-release
            displayName: 'run tests'
